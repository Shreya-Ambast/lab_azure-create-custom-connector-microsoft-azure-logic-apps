{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "some_email@gmail.com",
      "name": "OpenWeatherMap API",
      "url": "https://openweathermap.org/api"
    },
    "description": "Get current weather, daily forecast for 16 days, and 3-hourly forecast 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.",
    "license": {
      "name": "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)",
      "url": "https://openweathermap.org/price"
    },
    "termsOfService": "https://openweathermap.org/terms",
    "title": "OpenWeatherMap API",
    "version": "2.5.2"
  },
  "host": "api.openweathermap.org",
  "basePath": "/data/2.5/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/weather": {
      "get": {
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by comma; use ISO 3166 country codes.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "**City ID**. *Example: `2172797`*. You can call by city ID. API responds with exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in parameter &mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs. it's treated as 3 API calls.*",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "**Latitude**. *Example: 35*. The latitude cordinate of the location of your interest. Must use with `lon`.",
            "in": "query",
            "name": "lat",
            "required": false,
            "type": "string"
          },
          {
            "description": "**Longitude**. *Example: 139*. Longitude cordinate of the location of your interest. Must use with `lat`.",
            "in": "query",
            "name": "lon",
            "required": false,
            "type": "string"
          },
          {
            "description": "**Zip code**. Search by zip code. *Example: 95050,us*. Please note if country is not specified then the search works for USA as a default.",
            "in": "query",
            "name": "zip",
            "required": false,
            "type": "string"
          },
          {
            "default": "imperial",
            "description": "**Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use units parameter, format is `standard` by default.",
            "enum": [
              "standard",
              "metric",
              "imperial"
            ],
            "in": "query",
            "name": "units",
            "required": false,
            "type": "string"
          },
          {
            "default": "en",
            "description": "**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.",
            "enum": [
              "ar",
              "bg",
              "ca",
              "cz",
              "de",
              "el",
              "en",
              "fa",
              "fi",
              "fr",
              "gl",
              "hr",
              "hu",
              "it",
              "ja",
              "kr",
              "la",
              "lt",
              "mk",
              "nl",
              "pl",
              "pt",
              "ro",
              "ru",
              "se",
              "sk",
              "sl",
              "es",
              "tr",
              "ua",
              "vi",
              "zh_cn",
              "zh_tw"
            ],
            "in": "query",
            "name": "lang",
            "required": false,
            "type": "string"
          },
          {
            "default": "json",
            "description": "**Mode**. *Example: html*. Determines format of response. Possible values are `xml` and `html`. If mode parameter is empty the format is `json` by default.",
            "enum": [
              "json",
              "xml",
              "html"
            ],
            "in": "query",
            "name": "mode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/200"
            }
          },
          "404": {
            "description": "Not found response",
            "schema": {
              "example": "Not found",
              "title": "Weather not found",
              "type": "string"
            }
          }
        },
        "tags": [
          "Current Weather Data"
        ],
        "description": "Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.",
        "operationId": "CurrentWeatherData",
        "summary": "Call current weather data for one location"
      }
    }
  },
  "definitions": {
    "200": {
      "properties": {
        "base": {
          "description": "Internal parameter",
          "example": "cmc stations",
          "type": "string"
        },
        "clouds": {
          "$ref": "#/definitions/Clouds"
        },
        "cod": {
          "description": "Internal parameter",
          "example": 200,
          "format": "int32",
          "type": "integer"
        },
        "coord": {
          "$ref": "#/definitions/Coord"
        },
        "dt": {
          "description": "Time of data calculation, unix, UTC",
          "example": 1435658272,
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "description": "City ID",
          "example": 2172797,
          "format": "int32",
          "type": "integer"
        },
        "main": {
          "$ref": "#/definitions/Main"
        },
        "name": {
          "example": "Cairns",
          "type": "string"
        },
        "rain": {
          "$ref": "#/definitions/Rain"
        },
        "snow": {
          "$ref": "#/definitions/Snow"
        },
        "sys": {
          "$ref": "#/definitions/Sys"
        },
        "visibility": {
          "description": "Visibility, meter",
          "example": 16093,
          "type": "integer"
        },
        "weather": {
          "description": "(more info Weather condition codes)",
          "items": {
            "$ref": "#/definitions/Weather"
          },
          "type": "array"
        },
        "wind": {
          "$ref": "#/definitions/Wind"
        }
      },
      "title": "Successful response",
      "type": "object"
    },
    "Clouds": {
      "properties": {
        "all": {
          "description": "Cloudiness, %",
          "example": 75,
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "Clouds",
      "type": "object"
    },
    "Coord": {
      "properties": {
        "lat": {
          "description": "City geo location, latitude",
          "example": -16.92,
          "type": "number"
        },
        "lon": {
          "description": "City geo location, longitude",
          "example": 145.77,
          "type": "number"
        }
      },
      "title": "Coord",
      "type": "object"
    },
    "Main": {
      "properties": {
        "grnd_level": {
          "description": "Atmospheric pressure on the ground level, hPa",
          "example": 990,
          "type": "number"
        },
        "humidity": {
          "description": "Humidity, %",
          "example": 83,
          "format": "int32",
          "type": "integer"
        },
        "pressure": {
          "description": "Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa",
          "example": 1019,
          "format": "int32",
          "type": "integer"
        },
        "sea_level": {
          "description": "Atmospheric pressure on the sea level, hPa",
          "example": 984,
          "type": "number"
        },
        "temp": {
          "description": "Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.",
          "example": 293.25,
          "type": "number"
        },
        "temp_max": {
          "description": "Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.",
          "example": 295.37,
          "type": "number"
        },
        "temp_min": {
          "description": "Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.",
          "example": 289.82,
          "type": "number"
        }
      },
      "title": "Main",
      "type": "object"
    },
    "Rain": {
      "properties": {
        "3h": {
          "description": "Rain volume for the last 3 hours",
          "example": 3,
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "Rain",
      "type": "object"
    },
    "Snow": {
      "properties": {
        "3h": {
          "description": "Snow volume for the last 3 hours",
          "example": 6,
          "type": "number"
        }
      },
      "title": "Snow",
      "type": "object"
    },
    "Sys": {
      "properties": {
        "country": {
          "description": "Country code (GB, JP etc.)",
          "example": "AU",
          "type": "string"
        },
        "id": {
          "description": "Internal parameter",
          "example": 8166,
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "Internal parameter",
          "example": 0.0166,
          "type": "number"
        },
        "sunrise": {
          "description": "Sunrise time, unix, UTC",
          "example": 1435610796,
          "format": "int32",
          "type": "integer"
        },
        "sunset": {
          "description": "Sunset time, unix, UTC",
          "example": 1435650870,
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "Internal parameter",
          "example": 1,
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "Sys",
      "type": "object"
    },
    "Weather": {
      "properties": {
        "description": {
          "description": "Weather condition within the group",
          "example": "broken clouds",
          "type": "string"
        },
        "icon": {
          "description": "Weather icon id",
          "example": "04n",
          "type": "string"
        },
        "id": {
          "description": "Weather condition id",
          "example": 803,
          "format": "int32",
          "type": "integer"
        },
        "main": {
          "description": "Group of weather parameters (Rain, Snow, Extreme etc.)",
          "example": "Clouds",
          "type": "string"
        }
      },
      "title": "Weather",
      "type": "object"
    },
    "Wind": {
      "properties": {
        "deg": {
          "description": "Wind direction, degrees (meteorological)",
          "example": 150,
          "format": "int32",
          "type": "integer"
        },
        "speed": {
          "description": "Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.",
          "example": 5.1,
          "type": "number"
        }
      },
      "title": "Wind",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "app_id": {
      "description": "API key to authorize requests. If you don't have an OpenWeatherMap API key, use `fd4698c940c6d1da602a70ac34f0b147`.",
      "in": "query",
      "name": "appid",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "app_id": []
    }
  ],
  "tags": [
    {
      "description": "Get current weather details",
      "name": "Current Weather Data"
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://openweathermap.org/api"
  },
  "x-components": {
    "parameters": {
      "id": {
        "description": "**City ID**. *Example: `2172797`*. You can call by city ID. API responds with exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in parameter &mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs. it's treated as 3 API calls.*",
        "explode": true,
        "in": "query",
        "name": "id",
        "required": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "lang": {
        "description": "**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.",
        "explode": true,
        "in": "query",
        "name": "lang",
        "required": false,
        "schema": {
          "default": "en",
          "enum": [
            "ar",
            "bg",
            "ca",
            "cz",
            "de",
            "el",
            "en",
            "fa",
            "fi",
            "fr",
            "gl",
            "hr",
            "hu",
            "it",
            "ja",
            "kr",
            "la",
            "lt",
            "mk",
            "nl",
            "pl",
            "pt",
            "ro",
            "ru",
            "se",
            "sk",
            "sl",
            "es",
            "tr",
            "ua",
            "vi",
            "zh_cn",
            "zh_tw"
          ],
          "type": "string"
        },
        "style": "form"
      },
      "lat": {
        "description": "**Latitude**. *Example: 35*. The latitude cordinate of the location of your interest. Must use with `lon`.",
        "explode": true,
        "in": "query",
        "name": "lat",
        "required": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "lon": {
        "description": "**Longitude**. *Example: 139*. Longitude cordinate of the location of your interest. Must use with `lat`.",
        "explode": true,
        "in": "query",
        "name": "lon",
        "required": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "mode": {
        "description": "**Mode**. *Example: html*. Determines format of response. Possible values are `xml` and `html`. If mode parameter is empty the format is `json` by default.",
        "explode": true,
        "in": "query",
        "name": "mode",
        "required": false,
        "schema": {
          "default": "json",
          "enum": [
            "json",
            "xml",
            "html"
          ],
          "type": "string"
        },
        "style": "form"
      },
      "q": {
        "description": "**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by comma; use ISO 3166 country codes.",
        "explode": true,
        "in": "query",
        "name": "q",
        "required": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "units": {
        "description": "**Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use units parameter, format is `standard` by default.",
        "explode": true,
        "in": "query",
        "name": "units",
        "required": false,
        "schema": {
          "default": "imperial",
          "enum": [
            "standard",
            "metric",
            "imperial"
          ],
          "type": "string"
        },
        "style": "form"
      },
      "zip": {
        "description": "**Zip code**. Search by zip code. *Example: 95050,us*. Please note if country is not specified then the search works for USA as a default.",
        "explode": true,
        "in": "query",
        "name": "zip",
        "required": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      }
    }
  }
}
